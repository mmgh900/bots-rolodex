{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","bot","id","alt","name","email","CardList","bots","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","context","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredBots","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAEaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,IAAIC,GAApC,6BACRC,IAAKL,EAAMG,IAAIC,KACf,6BAAKJ,EAAMG,IAAIG,OACf,6BAAKN,EAAMG,IAAII,YCHVC,EAAW,SAACR,GACrB,OAAQ,qBAAKC,UAAU,YAAf,SACHD,EAAMS,KAAKC,KACR,SAAAP,GAAG,OAAI,cAAC,EAAD,CAAmBA,IAAKA,GAAbA,EAAIC,UCJrBO,G,YAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLC,YAAaH,EACbI,SAAUH,MCwCHI,E,kDAzCX,WAAYjB,EAAOkB,GAAU,IAAD,8BACxB,cAAMlB,EAAOkB,IAajBL,aAAe,SAACM,GACZ,EAAKC,SAAS,CACVC,YAAaF,EAAEG,OAAOC,SAd1B,EAAKC,MAAQ,CACTf,KAAM,GACNY,YAAa,IAJO,E,qDAQ5B,WAAqB,IAAD,OAChBI,MAAM,6CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACX,KAAMoB,S,oBAU5C,WAAU,IAAD,EACuBC,KAAKN,MAA1Bf,EADF,EACEA,KAAMY,EADR,EACQA,YACPU,EAAetB,EAAKuB,QAAO,SAAA7B,GAAG,OAChCA,EAAIG,KAAK2B,cAAcC,SAASb,EAAYY,kBAEhD,OACI,sBAAKhC,UAAU,MAAf,UACI,8CACA,cAAC,EAAD,CACIW,YAAa,cACbC,aAAciB,KAAKjB,eAEvB,cAAC,EAAD,CAAUP,KAAM,QAASG,KAAMsB,W,GAnC7BI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b993294d.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./card.styles.css\"\r\nexport const Card = (props) => (\r\n    <div className='card'>\r\n        <img src={`https://robohash.org/${props.bot.id}?set=set1&size?180Ã—180`}\r\n        alt={props.bot.id}/>\r\n        <h2>{props.bot.name}</h2>\r\n        <h3>{props.bot.email}</h3>\r\n    </div>\r\n)\r\n","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport {Card} from \"../card/card.component\";\r\n\r\nexport const CardList = (props) => {\r\n    return (<div className='card-list'>\r\n        {props.bots.map(\r\n            bot => <Card key={bot.id} bot={bot}/>\r\n\r\n        )}\r\n    </div>)\r\n}\r\n","import React from 'react'\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox = ({placeHolder, handleChange}) => (\r\n    <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={placeHolder}\r\n        onChange={handleChange}\r\n    />\r\n)\r\n","import {CardList} from \"./components/card-list/card-list.component\";\nimport './App.css';\nimport React, {Component} from \"react\";\nimport {SearchBox} from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            bots: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('http://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({bots: users}))\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            searchField: e.target.value\n        })\n\n    }\n\n    render() {\n        const {bots, searchField} = this.state;\n        const filteredBots = bots.filter(bot =>\n            bot.name.toLowerCase().includes(searchField.toLowerCase())\n        )\n        return (\n            <div className=\"App\">\n                <h1>Bots Rolodex</h1>\n                <SearchBox\n                    placeHolder={'Search bots'}\n                    handleChange={this.handleChange}\n                />\n                <CardList name={\"hello\"} bots={filteredBots}>\n                </CardList>\n            </div>\n\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}